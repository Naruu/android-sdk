apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.optimizely.ab.integration_test"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testApplicationId "com.optimizely.ab.integration_test.app"
        testInstrumentationRunner "com.optimizely.ab.integration_test.app.TestRunner"
    }

    sourceSets {
        androidTest {
            assets.srcDirs = ['src/androidTest/assets']
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField "String", "TEST_TAGS", "\"${getTestTags()}\""
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation (project(':android-sdk')) {
        exclude group: 'com.google.code.gson', module:'gson'
        exclude group: 'com.noveogroup.android', module:'android-logger'
    }
    implementation 'com.android.support:appcompat-v7:28.0.0'

    androidTestImplementation group: 'org.yaml', name: 'snakeyaml', version: '1.25'
    androidTestImplementation 'info.cukes:cucumber-android:1.2.5@jar'
    androidTestImplementation 'info.cukes:cucumber-picocontainer:1.2.4'
    androidTestImplementation group: 'org.slf4j', name: 'slf4j-android', version: '1.7.25'

    androidTestImplementation("com.android.support.test:runner:$support_test_runner_ver")
    androidTestImplementation "com.android.support:support-annotations:28.0.0"
    // Set this dependency to use JUnit 4 rules
    androidTestImplementation "com.android.support.test:rules:$support_test_runner_ver"
    // Set this dependency to build and run Espresso tests
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_ver"
    androidTestImplementation "org.mockito:mockito-core:$mockito_ver"
    androidTestImplementation "com.google.dexmaker:dexmaker:$dexmaker_ver"
    androidTestImplementation "com.google.dexmaker:dexmaker-mockito:$dexmaker_ver"
    // androidTestImplementation 'com.optimizely.ab:android-sdk:1.0.0'
    androidTestImplementation project(':android-sdk')
    androidTestImplementation project(path: ':shared')
    androidTestImplementation "com.fasterxml.jackson.core:jackson-databind:$jacksonversion"
}

def getTestTags() {
    // TODO: remove default tags and pick only using env variables of tags
    return project.hasProperty("tags") ? project.getProperties().get("tags") : "~@DYNAMIC_LANGUAGES, ~@DATAFILE_MANAGER , ~@NO_EASY_EVENT_TRACKING, ~@OASIS-3654, ~@GET_FEATURE_VAR, ~@OASIS-3582, ~@EVENT_FLUSH"
}
